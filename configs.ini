# `eval` is used to evaluate some of the config values, see the config
# parsing method.

# All input variables and constants are automatically also set to terminals as
# they have 0 arity.
[arities]
    +: 2
    *: 2
    /: 2
    -: 2

# Specify the constants you would like to employ in your evaluation
[constants]
    values: [0, 1]

[Search parameters]
# Specify the number of individuals(population) 
population_size: 10

# Specify the max depth of the tree
max_depth: 3

# Specify the number of best individuals that are preserved between generations
elite_size: 1

# Specify the number of generations you would like to generate
generations: 10

# Specify the number of individual solutions that are compared when
# determining which solutions are inserted into next generation of the
# search loop
tournament_size: 3

# Random seed. Enables a user to replicate experiment
seed: 1

# Probability of individual solutions to be varied by the crossover operator
crossover_probability: 0.8

# Probability of individual solutions to be varied by the mutation operator
mutation_probability: 0.2

[Fitness function]
# Fitness cases that are transformed by the attacker
#fitness_cases: [[_, _ - 1] for _ in range(-10, 11)]
input_file: fitness_cases.csv

# Variable names
variables: ['x0', 'x1']

# System function. Function that maps input to output target values
#system_function: ['+', ['*', ['x0'], ['x0']], ['*', ['x1'], ['x1']]]

# Parameters for coevolution. Both populations use the same search parameters
[Coevolution]
populations: ['defender', 'attacker']

